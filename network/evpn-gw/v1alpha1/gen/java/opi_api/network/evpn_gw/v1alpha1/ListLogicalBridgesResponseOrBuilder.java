// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: l2_xpu_infra_mgr.proto

package opi_api.network.evpn_gw.v1alpha1;

public interface ListLogicalBridgesResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opi_api.network.evpn_gw.v1alpha1.ListLogicalBridgesResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * List of all the logical bridges
   * </pre>
   *
   * <code>repeated .opi_api.network.evpn_gw.v1alpha1.LogicalBridge logical_bridges = 1;</code>
   */
  java.util.List<opi_api.network.evpn_gw.v1alpha1.LogicalBridge> 
      getLogicalBridgesList();
  /**
   * <pre>
   * List of all the logical bridges
   * </pre>
   *
   * <code>repeated .opi_api.network.evpn_gw.v1alpha1.LogicalBridge logical_bridges = 1;</code>
   */
  opi_api.network.evpn_gw.v1alpha1.LogicalBridge getLogicalBridges(int index);
  /**
   * <pre>
   * List of all the logical bridges
   * </pre>
   *
   * <code>repeated .opi_api.network.evpn_gw.v1alpha1.LogicalBridge logical_bridges = 1;</code>
   */
  int getLogicalBridgesCount();
  /**
   * <pre>
   * List of all the logical bridges
   * </pre>
   *
   * <code>repeated .opi_api.network.evpn_gw.v1alpha1.LogicalBridge logical_bridges = 1;</code>
   */
  java.util.List<? extends opi_api.network.evpn_gw.v1alpha1.LogicalBridgeOrBuilder> 
      getLogicalBridgesOrBuilderList();
  /**
   * <pre>
   * List of all the logical bridges
   * </pre>
   *
   * <code>repeated .opi_api.network.evpn_gw.v1alpha1.LogicalBridge logical_bridges = 1;</code>
   */
  opi_api.network.evpn_gw.v1alpha1.LogicalBridgeOrBuilder getLogicalBridgesOrBuilder(
      int index);

  /**
   * <pre>
   * Next page token of list response
   * </pre>
   *
   * <code>string next_page_token = 2;</code>
   * @return The nextPageToken.
   */
  java.lang.String getNextPageToken();
  /**
   * <pre>
   * Next page token of list response
   * </pre>
   *
   * <code>string next_page_token = 2;</code>
   * @return The bytes for nextPageToken.
   */
  com.google.protobuf.ByteString
      getNextPageTokenBytes();
}
