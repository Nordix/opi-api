// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: l2_xpu_infra_mgr.proto

package opi_api.network.evpn_gw.v1alpha1;

/**
 * <pre>
 * BridgePort structure
 * </pre>
 *
 * Protobuf type {@code opi_api.network.evpn_gw.v1alpha1.BridgePort}
 */
public final class BridgePort extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:opi_api.network.evpn_gw.v1alpha1.BridgePort)
    BridgePortOrBuilder {
private static final long serialVersionUID = 0L;
  // Use BridgePort.newBuilder() to construct.
  private BridgePort(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private BridgePort() {
    name_ = "";
    macAddress_ = "";
    ptype_ = 0;
    vlanId_ = emptyIntList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new BridgePort();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private BridgePort(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 16: {

            vportId_ = input.readUInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            macAddress_ = s;
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            ptype_ = rawValue;
            break;
          }
          case 40: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              vlanId_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            vlanId_.addInt(input.readUInt32());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              vlanId_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              vlanId_.addInt(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        vlanId_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return opi_api.network.evpn_gw.v1alpha1.L2XpuInfraMgrProto.internal_static_opi_api_network_evpn_gw_v1alpha1_BridgePort_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return opi_api.network.evpn_gw.v1alpha1.L2XpuInfraMgrProto.internal_static_opi_api_network_evpn_gw_v1alpha1_BridgePort_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            opi_api.network.evpn_gw.v1alpha1.BridgePort.class, opi_api.network.evpn_gw.v1alpha1.BridgePort.Builder.class);
  }

  /**
   * <pre>
   * Defines the available types of a bridge port
   * </pre>
   *
   * Protobuf enum {@code opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType}
   */
  public enum BridgePortType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * "unknown" bridge port type
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * "access" bridge port type 
     * </pre>
     *
     * <code>ACCESS = 1;</code>
     */
    ACCESS(1),
    /**
     * <pre>
     * "trunk" bridge port type
     * </pre>
     *
     * <code>TRUNK = 2;</code>
     */
    TRUNK(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * "unknown" bridge port type
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * "access" bridge port type 
     * </pre>
     *
     * <code>ACCESS = 1;</code>
     */
    public static final int ACCESS_VALUE = 1;
    /**
     * <pre>
     * "trunk" bridge port type
     * </pre>
     *
     * <code>TRUNK = 2;</code>
     */
    public static final int TRUNK_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BridgePortType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BridgePortType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return ACCESS;
        case 2: return TRUNK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BridgePortType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BridgePortType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BridgePortType>() {
            public BridgePortType findValueByNumber(int number) {
              return BridgePortType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return opi_api.network.evpn_gw.v1alpha1.BridgePort.getDescriptor().getEnumTypes().get(0);
    }

    private static final BridgePortType[] VALUES = values();

    public static BridgePortType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BridgePortType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType)
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Free text description
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Free text description
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VPORT_ID_FIELD_NUMBER = 2;
  private int vportId_;
  /**
   * <pre>
   * Key. Read-only. Assigned by the server in CreateBridgePort
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: vport_id cannot be negative number. --)
   * </pre>
   *
   * <code>uint32 vport_id = 2;</code>
   * @return The vportId.
   */
  @java.lang.Override
  public int getVportId() {
    return vportId_;
  }

  public static final int MAC_ADDRESS_FIELD_NUMBER = 3;
  private volatile java.lang.Object macAddress_;
  /**
   * <pre>
   * Use "aa:bb:cc:dd:ee:ff" format
   * </pre>
   *
   * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The macAddress.
   */
  @java.lang.Override
  public java.lang.String getMacAddress() {
    java.lang.Object ref = macAddress_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      macAddress_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Use "aa:bb:cc:dd:ee:ff" format
   * </pre>
   *
   * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for macAddress.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMacAddressBytes() {
    java.lang.Object ref = macAddress_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      macAddress_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PTYPE_FIELD_NUMBER = 4;
  private int ptype_;
  /**
   * <pre>
   * holds the type of the bridge port
   * </pre>
   *
   * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for ptype.
   */
  @java.lang.Override public int getPtypeValue() {
    return ptype_;
  }
  /**
   * <pre>
   * holds the type of the bridge port
   * </pre>
   *
   * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The ptype.
   */
  @java.lang.Override public opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType getPtype() {
    @SuppressWarnings("deprecation")
    opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType result = opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType.valueOf(ptype_);
    return result == null ? opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType.UNRECOGNIZED : result;
  }

  public static final int VLAN_ID_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.IntList vlanId_;
  /**
   * <pre>
   * Configured vlan ids on the bridge port
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: vlan cannot be negative number. --)
   * </pre>
   *
   * <code>repeated uint32 vlan_id = 5;</code>
   * @return A list containing the vlanId.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getVlanIdList() {
    return vlanId_;
  }
  /**
   * <pre>
   * Configured vlan ids on the bridge port
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: vlan cannot be negative number. --)
   * </pre>
   *
   * <code>repeated uint32 vlan_id = 5;</code>
   * @return The count of vlanId.
   */
  public int getVlanIdCount() {
    return vlanId_.size();
  }
  /**
   * <pre>
   * Configured vlan ids on the bridge port
   * (-- api-linter: core::0141::forbidden-types=disabled
   *     aip.dev/not-precedent: vlan cannot be negative number. --)
   * </pre>
   *
   * <code>repeated uint32 vlan_id = 5;</code>
   * @param index The index of the element to return.
   * @return The vlanId at the given index.
   */
  public int getVlanId(int index) {
    return vlanId_.getInt(index);
  }
  private int vlanIdMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (vportId_ != 0) {
      output.writeUInt32(2, vportId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(macAddress_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, macAddress_);
    }
    if (ptype_ != opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType.UNKNOWN.getNumber()) {
      output.writeEnum(4, ptype_);
    }
    if (getVlanIdList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(vlanIdMemoizedSerializedSize);
    }
    for (int i = 0; i < vlanId_.size(); i++) {
      output.writeUInt32NoTag(vlanId_.getInt(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (vportId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, vportId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(macAddress_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, macAddress_);
    }
    if (ptype_ != opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, ptype_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < vlanId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(vlanId_.getInt(i));
      }
      size += dataSize;
      if (!getVlanIdList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      vlanIdMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof opi_api.network.evpn_gw.v1alpha1.BridgePort)) {
      return super.equals(obj);
    }
    opi_api.network.evpn_gw.v1alpha1.BridgePort other = (opi_api.network.evpn_gw.v1alpha1.BridgePort) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (getVportId()
        != other.getVportId()) return false;
    if (!getMacAddress()
        .equals(other.getMacAddress())) return false;
    if (ptype_ != other.ptype_) return false;
    if (!getVlanIdList()
        .equals(other.getVlanIdList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + VPORT_ID_FIELD_NUMBER;
    hash = (53 * hash) + getVportId();
    hash = (37 * hash) + MAC_ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getMacAddress().hashCode();
    hash = (37 * hash) + PTYPE_FIELD_NUMBER;
    hash = (53 * hash) + ptype_;
    if (getVlanIdCount() > 0) {
      hash = (37 * hash) + VLAN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getVlanIdList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static opi_api.network.evpn_gw.v1alpha1.BridgePort parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(opi_api.network.evpn_gw.v1alpha1.BridgePort prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * BridgePort structure
   * </pre>
   *
   * Protobuf type {@code opi_api.network.evpn_gw.v1alpha1.BridgePort}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:opi_api.network.evpn_gw.v1alpha1.BridgePort)
      opi_api.network.evpn_gw.v1alpha1.BridgePortOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return opi_api.network.evpn_gw.v1alpha1.L2XpuInfraMgrProto.internal_static_opi_api_network_evpn_gw_v1alpha1_BridgePort_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return opi_api.network.evpn_gw.v1alpha1.L2XpuInfraMgrProto.internal_static_opi_api_network_evpn_gw_v1alpha1_BridgePort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              opi_api.network.evpn_gw.v1alpha1.BridgePort.class, opi_api.network.evpn_gw.v1alpha1.BridgePort.Builder.class);
    }

    // Construct using opi_api.network.evpn_gw.v1alpha1.BridgePort.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      vportId_ = 0;

      macAddress_ = "";

      ptype_ = 0;

      vlanId_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return opi_api.network.evpn_gw.v1alpha1.L2XpuInfraMgrProto.internal_static_opi_api_network_evpn_gw_v1alpha1_BridgePort_descriptor;
    }

    @java.lang.Override
    public opi_api.network.evpn_gw.v1alpha1.BridgePort getDefaultInstanceForType() {
      return opi_api.network.evpn_gw.v1alpha1.BridgePort.getDefaultInstance();
    }

    @java.lang.Override
    public opi_api.network.evpn_gw.v1alpha1.BridgePort build() {
      opi_api.network.evpn_gw.v1alpha1.BridgePort result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public opi_api.network.evpn_gw.v1alpha1.BridgePort buildPartial() {
      opi_api.network.evpn_gw.v1alpha1.BridgePort result = new opi_api.network.evpn_gw.v1alpha1.BridgePort(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      result.vportId_ = vportId_;
      result.macAddress_ = macAddress_;
      result.ptype_ = ptype_;
      if (((bitField0_ & 0x00000001) != 0)) {
        vlanId_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.vlanId_ = vlanId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof opi_api.network.evpn_gw.v1alpha1.BridgePort) {
        return mergeFrom((opi_api.network.evpn_gw.v1alpha1.BridgePort)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(opi_api.network.evpn_gw.v1alpha1.BridgePort other) {
      if (other == opi_api.network.evpn_gw.v1alpha1.BridgePort.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.getVportId() != 0) {
        setVportId(other.getVportId());
      }
      if (!other.getMacAddress().isEmpty()) {
        macAddress_ = other.macAddress_;
        onChanged();
      }
      if (other.ptype_ != 0) {
        setPtypeValue(other.getPtypeValue());
      }
      if (!other.vlanId_.isEmpty()) {
        if (vlanId_.isEmpty()) {
          vlanId_ = other.vlanId_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureVlanIdIsMutable();
          vlanId_.addAll(other.vlanId_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      opi_api.network.evpn_gw.v1alpha1.BridgePort parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (opi_api.network.evpn_gw.v1alpha1.BridgePort) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Free text description
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Free text description
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Free text description
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Free text description
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Free text description
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private int vportId_ ;
    /**
     * <pre>
     * Key. Read-only. Assigned by the server in CreateBridgePort
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vport_id cannot be negative number. --)
     * </pre>
     *
     * <code>uint32 vport_id = 2;</code>
     * @return The vportId.
     */
    @java.lang.Override
    public int getVportId() {
      return vportId_;
    }
    /**
     * <pre>
     * Key. Read-only. Assigned by the server in CreateBridgePort
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vport_id cannot be negative number. --)
     * </pre>
     *
     * <code>uint32 vport_id = 2;</code>
     * @param value The vportId to set.
     * @return This builder for chaining.
     */
    public Builder setVportId(int value) {
      
      vportId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Key. Read-only. Assigned by the server in CreateBridgePort
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vport_id cannot be negative number. --)
     * </pre>
     *
     * <code>uint32 vport_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearVportId() {
      
      vportId_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object macAddress_ = "";
    /**
     * <pre>
     * Use "aa:bb:cc:dd:ee:ff" format
     * </pre>
     *
     * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The macAddress.
     */
    public java.lang.String getMacAddress() {
      java.lang.Object ref = macAddress_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        macAddress_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Use "aa:bb:cc:dd:ee:ff" format
     * </pre>
     *
     * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The bytes for macAddress.
     */
    public com.google.protobuf.ByteString
        getMacAddressBytes() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        macAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Use "aa:bb:cc:dd:ee:ff" format
     * </pre>
     *
     * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The macAddress to set.
     * @return This builder for chaining.
     */
    public Builder setMacAddress(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      macAddress_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Use "aa:bb:cc:dd:ee:ff" format
     * </pre>
     *
     * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearMacAddress() {
      
      macAddress_ = getDefaultInstance().getMacAddress();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Use "aa:bb:cc:dd:ee:ff" format
     * </pre>
     *
     * <code>string mac_address = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The bytes for macAddress to set.
     * @return This builder for chaining.
     */
    public Builder setMacAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      macAddress_ = value;
      onChanged();
      return this;
    }

    private int ptype_ = 0;
    /**
     * <pre>
     * holds the type of the bridge port
     * </pre>
     *
     * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for ptype.
     */
    @java.lang.Override public int getPtypeValue() {
      return ptype_;
    }
    /**
     * <pre>
     * holds the type of the bridge port
     * </pre>
     *
     * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for ptype to set.
     * @return This builder for chaining.
     */
    public Builder setPtypeValue(int value) {
      
      ptype_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * holds the type of the bridge port
     * </pre>
     *
     * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The ptype.
     */
    @java.lang.Override
    public opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType getPtype() {
      @SuppressWarnings("deprecation")
      opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType result = opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType.valueOf(ptype_);
      return result == null ? opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * holds the type of the bridge port
     * </pre>
     *
     * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The ptype to set.
     * @return This builder for chaining.
     */
    public Builder setPtype(opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      ptype_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * holds the type of the bridge port
     * </pre>
     *
     * <code>.opi_api.network.evpn_gw.v1alpha1.BridgePort.BridgePortType ptype = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearPtype() {
      
      ptype_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList vlanId_ = emptyIntList();
    private void ensureVlanIdIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        vlanId_ = mutableCopy(vlanId_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @return A list containing the vlanId.
     */
    public java.util.List<java.lang.Integer>
        getVlanIdList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(vlanId_) : vlanId_;
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @return The count of vlanId.
     */
    public int getVlanIdCount() {
      return vlanId_.size();
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @param index The index of the element to return.
     * @return The vlanId at the given index.
     */
    public int getVlanId(int index) {
      return vlanId_.getInt(index);
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @param index The index to set the value at.
     * @param value The vlanId to set.
     * @return This builder for chaining.
     */
    public Builder setVlanId(
        int index, int value) {
      ensureVlanIdIsMutable();
      vlanId_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @param value The vlanId to add.
     * @return This builder for chaining.
     */
    public Builder addVlanId(int value) {
      ensureVlanIdIsMutable();
      vlanId_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @param values The vlanId to add.
     * @return This builder for chaining.
     */
    public Builder addAllVlanId(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureVlanIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, vlanId_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configured vlan ids on the bridge port
     * (-- api-linter: core::0141::forbidden-types=disabled
     *     aip.dev/not-precedent: vlan cannot be negative number. --)
     * </pre>
     *
     * <code>repeated uint32 vlan_id = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearVlanId() {
      vlanId_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:opi_api.network.evpn_gw.v1alpha1.BridgePort)
  }

  // @@protoc_insertion_point(class_scope:opi_api.network.evpn_gw.v1alpha1.BridgePort)
  private static final opi_api.network.evpn_gw.v1alpha1.BridgePort DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new opi_api.network.evpn_gw.v1alpha1.BridgePort();
  }

  public static opi_api.network.evpn_gw.v1alpha1.BridgePort getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BridgePort>
      PARSER = new com.google.protobuf.AbstractParser<BridgePort>() {
    @java.lang.Override
    public BridgePort parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new BridgePort(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<BridgePort> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BridgePort> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public opi_api.network.evpn_gw.v1alpha1.BridgePort getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

